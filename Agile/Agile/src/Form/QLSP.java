/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import Controller.SanPham;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Image;
import java.io.File;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.sql.Date;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class QLSP extends javax.swing.JInternalFrame {

    /**
     * Creates new form QLSP
     */
    String user = "sa";
    String pass = "23082001";
    Connection conn;
    String url = "jdbc:sqlserver://localhost:1433;databaseName = QLBH";
    List<SanPham> ListSP = new ArrayList<>();
    DefaultTableModel model;
    String ImageName = "";
    int index;
    Locale locale = new Locale("en", "EN");
    DecimalFormat dcf = (DecimalFormat) NumberFormat.getNumberInstance(locale);
//    NumberFormat current = NumberFormat.getCurrencyInstance(locale);

    public QLSP() {
        initComponents();
        conn = getConnection();
        ListSP = fetchList();
        renderForm(ListSP);
//        read();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCannel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        panel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMauSac = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        txtTenSP = new javax.swing.JTextField();
        txtGiaTien = new javax.swing.JTextField();
        txtNgayNhap = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblImage = new javax.swing.JLabel();
        lblTailen = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtLinkAnh = new javax.swing.JTextField();
        cboSize = new javax.swing.JComboBox<>();
        cboTrangThai = new javax.swing.JComboBox<>();
        cboLoaiSP = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListSP = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnFind = new javax.swing.JButton();
        txtTimSP = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Quản Lí Sản Phẩm");

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(1191, 683));

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/plus (2).png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/refresh (2).png"))); // NOI18N
        btnUpdate.setText("Cập nhật");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/remove.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCannel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnCannel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/close.png"))); // NOI18N
        btnCannel.setText("Hủy");
        btnCannel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCannelActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel1.setText("Quản Lí Sản Phẩm");

        panel.setBackground(new java.awt.Color(255, 204, 204));
        panel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 20))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Mã sản phẩm");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Tên sản phẩm");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Giá tiền");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Ngày nhập");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Màu sắc");

        txtMauSac.setEditable(false);
        txtMauSac.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMauSac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMauSacActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Size");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Số lượng");

        txtSoLuong.setEditable(false);
        txtSoLuong.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoLuongActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Trạng thái");

        jLabel11.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Ảnh");

        txtMaSP.setEditable(false);
        txtMaSP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtTenSP.setEditable(false);
        txtTenSP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtGiaTien.setEditable(false);
        txtGiaTien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtNgayNhap.setEditable(false);
        txtNgayNhap.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Loại sản phẩm");

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        lblTailen.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblTailen.setText("Tải lên");
        lblTailen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTailenMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblTailenMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblTailenMouseExited(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Link ảnh");

        txtLinkAnh.setEditable(false);
        txtLinkAnh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtLinkAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLinkAnhActionPerformed(evt);
            }
        });

        cboSize.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "38", "39", "40", "41", "42", "43", "44", "45" }));
        cboSize.setSelectedIndex(-1);
        cboSize.setEnabled(false);

        cboTrangThai.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đã về", "Chưa về" }));
        cboTrangThai.setSelectedIndex(-1);
        cboTrangThai.setEnabled(false);

        cboLoaiSP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboLoaiSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Converse", "Balenciaga", "Vans", "Adidas", "Alexander MC Queen" }));
        cboLoaiSP.setSelectedIndex(-1);
        cboLoaiSP.setEnabled(false);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(panelLayout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(31, 31, 31)
                            .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelLayout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtGiaTien, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel13))
                        .addGap(22, 22, 22)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(txtLinkAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(209, 209, 209))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cboTrangThai, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboSize, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTailen, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(txtMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        panelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtGiaTien, txtLinkAnh, txtMaSP, txtMauSac, txtNgayNhap, txtTenSP});

        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                            .addComponent(txtMauSac)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cboSize, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblTailen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtGiaTien, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(11, 11, 11)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtLinkAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cboLoaiSP)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(14, 14, 14))))
        );

        panelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel3, txtTenSP});

        panelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel5, txtNgayNhap});

        panelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel9, txtSoLuong});

        panelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel10, txtLinkAnh});

        panelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel7, txtMauSac});

        panelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, txtMaSP});

        jPanel4.setBackground(new java.awt.Color(255, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "List Product", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 20))); // NOI18N

        tblListSP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblListSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Loại sản phẩm", "Màu sắc", "Size", "Giá tiền", "Ngày nhập", "Số lượng", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListSPMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblListSP);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/save.png"))); // NOI18N
        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel6.setText("Tìm sản phẩm");

        btnFind.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/search.png"))); // NOI18N
        btnFind.setText("Tìm sản phẩm");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        txtTimSP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(29, 29, 29)
                                .addComponent(txtTimSP, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(88, 88, 88)
                                .addComponent(btnFind)))
                        .addContainerGap(32, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(90, 90, 90)
                        .addComponent(btnUpdate)
                        .addGap(95, 95, 95)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCannel)
                        .addGap(109, 109, 109)
                        .addComponent(btnSave)
                        .addGap(97, 97, 97))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnCannel, btnDelete, btnSave, btnUpdate});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCannel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTimSP, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCannel, btnDelete, btnFind, btnSave, btnUpdate});

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1243, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    protected void read() {
        String query = "EXEC find_id_sp ?";
        List<SanPham> listsp = new ArrayList<SanPham>();
        try {
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, txtTimSP.getText());

//            ps.execute();
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                String MaSP = rs.getString(1);
                String TenSP = rs.getNString(2);
                String LoaiSP = rs.getString(3);
                String MauSac = rs.getString(4);
                int Size = rs.getInt(5);
                String Image = rs.getString(6);
                double Gia = rs.getDouble(7);
                Date Ngaynhap = rs.getDate(8);
                int SoLuong = rs.getInt(9);
                String TrangThai = rs.getNString(10);
                
                listsp.add(new SanPham(MaSP, TenSP, LoaiSP, MauSac, Size, Image, Gia, Ngaynhap, SoLuong, TrangThai));
            }
            renderForm(listsp);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    protected void renderForm(List<SanPham> sp) {
        model = (DefaultTableModel) tblListSP.getModel();
        model.setRowCount(0);
        String patter = "#,###,###";
        for (int i = 0; i < sp.size(); i++) {
            dcf.applyPattern(patter);
            SanPham x = sp.get(i);
            model.addRow(new Object[]{x.getID_SP(), x.getTen_SP(), x.getLoai_SP(),
                x.getMauSac(), x.getSize(), dcf.format(x.getGiaTien()), x.getNgaynhap(), x.getSoLuong(),
                x.getTrangThai()});
        }
    }

    protected List<SanPham> fetchList() {
        List<SanPham> list = new ArrayList<SanPham>();
        String query = "SELECT * FROM SANPHAM";

        try {
            PreparedStatement ps = conn.prepareStatement(query);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String ID_SP = rs.getNString("ID_SP");
                String Ten_SP = rs.getNString("TEN_SP");
                String Loai_SP = rs.getNString("LOAI_SP");
                String MauSac = rs.getNString("MAUSAC");
                int Size = rs.getInt("SIZE");
                String Image = rs.getString("IMAGES");
                double GiaBan = rs.getDouble("GIABAN");
                Date NgayNhap = rs.getDate("NGNHAP");
                int SoLuong = rs.getInt("SOLUONG");
                String TrangThai = rs.getNString("TRANGTHAI");

                SanPham sp = new SanPham(ID_SP, Ten_SP, Loai_SP, MauSac, Size, Image, GiaBan, NgayNhap, SoLuong, TrangThai);
                list.add(sp);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return list;
    }

    protected Connection getConnection() {
        Connection conn = null;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conn = DriverManager.getConnection(url, user, pass);
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return conn;
    }
    private void txtMauSacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMauSacActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMauSacActionPerformed

    private void txtSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoLuongActionPerformed

    private void lblTailenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTailenMouseClicked
        // TODO add your handling code here:
        JFileChooser jfc = null;

        try {
            jfc = new JFileChooser();
            jfc.setCurrentDirectory(new File(System.getProperty("user.dir")));
            FileNameExtensionFilter extension = new FileNameExtensionFilter("*Images", "jpg", "png", "jpeg");
            jfc.addChoosableFileFilter(extension);
            int select = jfc.showOpenDialog(this);

            if (select == JFileChooser.APPROVE_OPTION) {
                ImageName = jfc.getSelectedFile().getAbsolutePath();
                //                ImageIcon icon = new ImageIcon(new ImageIcon(ImageName).getImage().getScaledInstance(40, 20, Image.SCALE_SMOOTH));
                //                lblImage.setIcon(icon);

                ImageIcon icon = new ImageIcon(ImageName);
                Image img = icon.getImage();
                Image new_img = img.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon h = new ImageIcon(new_img);
                lblImage.setIcon(h);
                txtLinkAnh.setText(ImageName);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_lblTailenMouseClicked

    private void lblTailenMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTailenMouseEntered
        // TODO add your handling code here:
        lblTailen.setForeground(Color.BLUE.darker());
        lblTailen.setCursor(new Cursor(Cursor.HAND_CURSOR));
        lblTailen.setText("<html><a style = 'text-decoration: underline;font-style: italic;' href = ''>" + "Tải lên" + "</a></html>");
    }//GEN-LAST:event_lblTailenMouseEntered

    private void lblTailenMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTailenMouseExited
        // TODO add your handling code here:
        lblTailen.setText("Tải lên");
    }//GEN-LAST:event_lblTailenMouseExited
    protected void fetchLoaiSP() {
        String query = "SELECT * FROM SANPHAM";

        try {
            PreparedStatement ps = conn.prepareStatement(query);
            ResultSet rs = ps.executeQuery();

        } catch (Exception e) {
        }
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        unEditable();
        ClearForm();
        try {
//            if (checkNull()) {
//                
//            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnAddActionPerformed
    private boolean checkMaSP(List<SanPham> sp) {
        for (int i = 0; i < sp.size(); i++) {
            SanPham x = sp.get(i);
            if (txtMaSP.getText().equalsIgnoreCase(x.getID_SP())) {
                return false;
            }
        }
        return true;
    }
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
//        System.out.println(lblTailen.getText());
        String query = "INSERT INTO SANPHAM(ID_SP, TEN_SP, LOAI_SP, MAUSAC, SIZE, IMAGES, GIABAN,"
                + "NGNHAP, SOLUONG, TRANGTHAI)" + "VALUES(?, ?, ?, ?, ? , ?, ?, ?, ?, ?)";

        String sql = "SELECT * FROM SANPHAM";
//        String ID = txtMaSP.getText();
//        String TenSP = txtTenSP.getText();
//        String LoaiSP = txtLoaiSP.getText();
//        String MauSac = txtMauSac.getText();
//        int size = Integer.parseInt(txtSize.getText());
//        String Images = ImageName;
//        double GiaBan = Double.parseDouble(txtGiaTien.getText());
//        Date NgNhap = new Date(txtNgayNhap.getText());
//        int SoLuong = Integer.parseInt(txtSoLuong.getText());
//        String TrangThai = txtTrangthai.getText();
        try {
            if (checkNull() && checkSo() && checkDate()) {
                if (checkMaSP(ListSP)) {
                    PreparedStatement ps = conn.prepareStatement(query);

                    ps.setString(1, txtMaSP.getText());
                    ps.setNString(2, txtTenSP.getText());
                    ps.setNString(3, cboLoaiSP.getSelectedItem().toString());
                    ps.setNString(4, txtMauSac.getText());
                    ps.setInt(5, Integer.parseInt(cboSize.getSelectedItem().toString()));
                    ps.setString(6, ImageName);
                    ps.setDouble(7, Double.parseDouble(txtGiaTien.getText()));
                    ps.setString(8, txtNgayNhap.getText());
                    ps.setInt(9, Integer.parseInt(txtSoLuong.getText()));
                    ps.setNString(10, cboTrangThai.getSelectedItem().toString());

                    ps.execute();

                    ListSP = fetchList();
                    renderForm(ListSP);
                    ClearForm();
                } else {
                    JOptionPane.showMessageDialog(this, "Mã sản phẩm đã tồn tại", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCannelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCannelActionPerformed
        // TODO add your handling code here:
        ClearForm();
    }//GEN-LAST:event_btnCannelActionPerformed

    private void tblListSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListSPMouseClicked
        // TODO add your handling code here:

        index = tblListSP.getSelectedRow();

        try {
            if (index >= 0) {
                unEditable();
                btnUpdate.setEnabled(true);
                btnDelete.setEnabled(true);
                ShowDetails();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblListSPMouseClicked

    private void txtLinkAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLinkAnhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLinkAnhActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        index = tblListSP.getSelectedRow();
        String query = "DELETE FROM SANPHAM WHERE ID_SP = ?";
        String MaSP = tblListSP.getValueAt(index, 0).toString();
        try {
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, MaSP);

            ps.execute();

            Delete();
            renderForm(ListSP);
            ClearForm();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        index = tblListSP.getSelectedRow();
        String MASP = tblListSP.getValueAt(index, 0).toString();
        String query = "UPDATE SANPHAM SET TEN_SP = ?, LOAI_SP = ?, MAUSAC = ?, SIZE = ?"
                + ", IMAGES = ?, GIABAN = ?, NGNHAP = ?, SOLUONG = ?, TRANGTHAI = ? WHERE ID_SP = ?";
        try {
            if (checkNull() && checkSo() && checkDate()) {
                PreparedStatement ps = conn.prepareStatement(query);
                ps.setNString(1, txtTenSP.getText());
                ps.setString(2, cboLoaiSP.getSelectedItem().toString());
                ps.setNString(3, txtMauSac.getText());
                ps.setInt(4, Integer.parseInt(cboSize.getSelectedItem().toString()));
                ps.setString(5, txtLinkAnh.getText());
                ps.setDouble(6, Double.parseDouble(txtGiaTien.getText()));
                ps.setString(7, txtNgayNhap.getText());
                ps.setInt(8, Integer.parseInt(txtSoLuong.getText()));
                ps.setNString(9, cboTrangThai.getSelectedItem().toString());
                ps.setString(10, MASP);

                ps.execute();
                Update(ListSP);
                renderForm(ListSP);

                ClearForm();
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            return;
        }
    }//GEN-LAST:event_btnUpdateActionPerformed
    protected void find(List<SanPham> sp) {
        List<SanPham> list = new ArrayList<SanPham>();
        for (SanPham x : sp) {
            if (x.getID_SP().contains(txtTimSP.getText())) {
                String MaSP = x.getID_SP();
                String TenSP = x.getTen_SP();
                String LoaiSP = x.getLoai_SP();
                String MauSac = x.getMauSac();
                int Size = x.getSize();
                String Image = x.getImage();
                double Gia = x.getGiaTien();
                Date Ngaynhap = (Date) x.getNgaynhap();
                int SoLuong = x.getSoLuong();
                String TrangThai = x.getTrangThai();
//                System.out.println(i);
                list.add(new SanPham(MaSP, TenSP, LoaiSP, MauSac, Size, Image, Gia, Ngaynhap, SoLuong, TrangThai));
            }

        }
        renderForm(list);
    }
    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        List<SanPham> list = new ArrayList<SanPham>();

        String txt = "";
        try {
//            PreparedStatement ps;
            if (txtTimSP.getText().isEmpty()) {
                ListSP.clear();
                ListSP = fetchList();
                renderForm(ListSP);
            } else if (!txtTimSP.getText().isEmpty()) {
//                String query = "EXEC find_id_sp ?";
//                PreparedStatement ps = conn.prepareStatement(query);
//                ps.setString(1, txtTimSP.getText());
//                
//                ResultSet rs = ps.executeQuery();
                read();
//                while (rs.next()) {
//                    
//                    
//                    ListSP.clear();
//                    ListSP.add(new SanPham(MaSP, TenSP, LoaiSP, MauSac, Size, Image, Gia, Ngaynhap, SoLuong, TrangThai));
//                }
//                System.out.println(ListSP.size());
//                renderForm(ListSP);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private boolean checkNull() {
        if (txtMaSP.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã sản phẩm chưa được nhập", "Text Empty", JOptionPane.ERROR_MESSAGE);
            txtMaSP.requestFocus();
            return false;
        } else if (txtTenSP.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tên sản phẩm chưa được nhập", "Text Empty", JOptionPane.ERROR_MESSAGE);
            txtTenSP.requestFocus();
            return false;
        } else if (txtGiaTien.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Giá sản phẩm chưa được nhập", "Text Empty", JOptionPane.ERROR_MESSAGE);
            txtGiaTien.requestFocus();
            return false;
        } else if (txtNgayNhap.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ngày nhập sản phẩm chưa được nhập", "Text Empty", JOptionPane.ERROR_MESSAGE);
            txtNgayNhap.requestFocus();
            return false;
        } else if (cboLoaiSP.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Loại sản phẩm chưa được chọn", "Text Empty", JOptionPane.ERROR_MESSAGE);
            cboLoaiSP.requestFocus();
            return false;
        } else if (txtMauSac.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Màu sắc sản phẩm chưa được nhập", "Text Empty", JOptionPane.ERROR_MESSAGE);
            txtMauSac.requestFocus();
            return false;
        } else if (cboSize.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Size sản phẩm chưa được chọn", "Text Empty", JOptionPane.ERROR_MESSAGE);
            cboSize.requestFocus();
            return false;
        } else if (txtSoLuong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Số lượng sản phẩm chưa được nhập", "Text Empty", JOptionPane.ERROR_MESSAGE);
            txtSoLuong.requestFocus();
            return false;
        } else if (cboTrangThai.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Trạng thái sản phẩm chưa được chọn", "Text Empty", JOptionPane.ERROR_MESSAGE);
            cboTrangThai.requestFocus();
            return false;
        } else if (lblImage.getIcon() == null) {
            JOptionPane.showMessageDialog(this, "Hình mẫu sản phẩm chưa được nhập", "Text Empty", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    private void unEditable() {
        txtMaSP.setEditable(true);
        txtTenSP.setEditable(true);
        txtGiaTien.setEditable(true);
        txtNgayNhap.setEditable(true);
        cboLoaiSP.setEnabled(true);
        txtMauSac.setEditable(true);
        txtSoLuong.setEditable(true);
        cboSize.setEnabled(true);
        cboTrangThai.setEnabled(true);
    }

    private boolean checkSo() {
//        String Size = txtSize.getText();
        String SoLuong = txtSoLuong.getText();
        String GiaTien = txtGiaTien.getText();
        String NgayNhap = txtNgayNhap.getText();

        try {
            double checkGiaTien = Double.parseDouble(GiaTien);
            if (checkGiaTien <= 0) {
                JOptionPane.showMessageDialog(this, "Giá tiền không thể là số âm", "Error format", JOptionPane.ERROR_MESSAGE);
                txtGiaTien.requestFocus();
                return false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Giá sản phẩm phải là số", "Type error", JOptionPane.ERROR_MESSAGE);
            txtGiaTien.requestFocus();
            return false;
        }

//        try {
//            int checkSize = Integer.parseInt(Size);
//            if (checkSize <= 0) {
//                JOptionPane.showMessageDialog(this, "Size không thể là số âm", "Error format", JOptionPane.ERROR_MESSAGE);
//                txtSize.requestFocus();
//                return false;
//            }
//
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Size sản phẩm phải là số", "Type error", JOptionPane.ERROR_MESSAGE);
//            txtSize.requestFocus();
//            return false;
//        }
        try {
            int checkSoLuong = Integer.parseInt(SoLuong);
            if (checkSoLuong <= 0) {
                JOptionPane.showMessageDialog(this, "Số lượng không thể là số âm", "Error format", JOptionPane.ERROR_MESSAGE);
                txtSoLuong.requestFocus();
                return false;
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Số lượng sản phẩm phải là số", "Type error", JOptionPane.ERROR_MESSAGE);
            txtSoLuong.requestFocus();
            return false;
        }
        return true;
    }

    private boolean checkDate() {
        Date date;
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            date = Date.valueOf(txtNgayNhap.getText());
//            date =  DateFormat.getDateInstance().parse(txtNgayNhap.getText());
            return true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ngày nhập sản phẩm phải đúng định dạng yyyy-MM-dd",
                    "Type error", JOptionPane.ERROR_MESSAGE);
            txtNgayNhap.requestFocus();
            return false;
        }
    }

    private void ClearForm() {
        txtMaSP.setText("");
        txtTenSP.setText("");
        txtGiaTien.setText("");
        txtNgayNhap.setText("");
        cboLoaiSP.setSelectedIndex(-1);
        txtMauSac.setText("");
        txtSoLuong.setText("");
        cboSize.setSelectedIndex(-1);
        cboTrangThai.setSelectedIndex(-1);
        lblImage.setIcon(null);
        txtLinkAnh.setText("");
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
        txtMaSP.setEditable(true);
//        index = -1;
    }

    private void ShowDetails() {
        String patter = "#######";
        dcf.applyPattern(patter);
        SanPham sp = ListSP.get(index);
        ImageName = sp.getImage();
        txtMaSP.setText(sp.getID_SP());
        txtTenSP.setText(sp.getTen_SP());
        txtGiaTien.setText(dcf.format(sp.getGiaTien()));
        txtNgayNhap.setText(sp.getNgaynhap().toString());
        cboLoaiSP.setSelectedItem(sp.getLoai_SP());
        txtMauSac.setText(sp.getMauSac());
        cboSize.setSelectedItem(sp.getSize() + "");
        txtSoLuong.setText(sp.getSoLuong() + "");
        cboTrangThai.setSelectedItem(sp.getTrangThai());
        txtLinkAnh.setText(sp.getImage());
        lblImage.setIcon(new ImageIcon(new ImageIcon(sp.getImage()).getImage().getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH)));
        txtTenSP.setEditable(true);
        txtNgayNhap.setEditable(true);
        txtGiaTien.setEditable(true);
        txtMauSac.setEditable(true);
        txtSoLuong.setEditable(true);
    }

    private void Update(List<SanPham> data) {
        SanPham sp = data.get(index);
        Double GiaSP = Double.parseDouble(txtGiaTien.getText());
        int SoLuong = Integer.parseInt(txtSoLuong.getText());
        String LoaiSP = cboLoaiSP.getSelectedItem().toString();
        int Size = Integer.parseInt(cboSize.getSelectedItem().toString());
        Date NgayNhap = Date.valueOf(txtNgayNhap.getText());
        if (txtMaSP.getText().equalsIgnoreCase(sp.getID_SP())) {
            ListSP.set(index, new SanPham(sp.getID_SP(), txtTenSP.getText(), LoaiSP, txtMauSac.getText(),
                    Size, txtLinkAnh.getText(), GiaSP, NgayNhap, SoLuong, cboTrangThai.getSelectedItem().toString()));
            JOptionPane.showMessageDialog(this, "Update thành công");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCannel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboLoaiSP;
    private javax.swing.JComboBox<String> cboSize;
    private javax.swing.JComboBox<String> cboTrangThai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblTailen;
    private javax.swing.JPanel panel;
    private javax.swing.JTable tblListSP;
    private javax.swing.JTextField txtGiaTien;
    private javax.swing.JTextField txtLinkAnh;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtMauSac;
    private javax.swing.JTextField txtNgayNhap;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTimSP;
    // End of variables declaration//GEN-END:variables

    private void Delete() {
        index = tblListSP.getSelectedRow();
        ListSP.remove(index);
    }
}
