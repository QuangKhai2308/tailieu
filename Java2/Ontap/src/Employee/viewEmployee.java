/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Employee;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Khai2
 */
public class viewEmployee extends javax.swing.JFrame {

    /**
     * Creates new form viewEmployee
     */
    DefaultTableModel model;
    List<Employee> ListEmp = new ArrayList<>();
    int index = 0;
    public viewEmployee() {
        initComponents();
        
        setLocationRelativeTo(null);
        model = (DefaultTableModel) tblEmployee.getModel();
        
        ListEmp.add(new Employee("Ph12175", "Nguyễn Quang Khải", 19, "Anh"));
        ListEmp.add(new Employee("Ph12221", "Bùi Xuân Sáng", 19, "Anh"));
        fillForm();
        if (ListEmp.size() >= 0) {
            showDetails();
            tblEmployee.setRowSelectionInterval(index, index);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblmanv = new javax.swing.JLabel();
        lblhoten = new javax.swing.JLabel();
        txtmanv = new javax.swing.JTextField();
        btnadd = new javax.swing.JButton();
        btnwrite = new javax.swing.JButton();
        txthoten = new javax.swing.JTextField();
        txttuoi = new javax.swing.JTextField();
        lbltuoi = new javax.swing.JLabel();
        lblngonngu = new javax.swing.JLabel();
        cbongoaingu = new javax.swing.JComboBox<>();
        btnOpen = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(51, 51, 255));
        lblTitle.setText("QUẢN LÍ NHÂN VIÊN");

        lblmanv.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblmanv.setText("Mã Nhân Viên");

        lblhoten.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblhoten.setText("Họ Và Tên");

        txtmanv.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

        btnadd.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btnadd.setText("Thêm mới");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnwrite.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btnwrite.setText("Ghi");
        btnwrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnwriteActionPerformed(evt);
            }
        });

        txthoten.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

        txttuoi.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

        lbltuoi.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lbltuoi.setText("Tuổi");

        lblngonngu.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        lblngonngu.setText("Ngoại Ngữ");

        cbongoaingu.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        cbongoaingu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn Ngoại Ngữ", "Anh", "Đức", "Pháp", "Mỹ" }));

        btnOpen.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        btndelete.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btndelete.setText("Xóa");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MANV", "HOTEN", "TUOI", "NGOAINGU", "TUOILAODONG"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblEmployee);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(lblTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblmanv)
                            .addComponent(lblhoten)
                            .addComponent(lbltuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblngonngu))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txttuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtmanv)
                            .addComponent(txthoten)
                            .addComponent(cbongoaingu, 0, 211, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnadd))
                            .addComponent(btnwrite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btndelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnOpen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblmanv, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtmanv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnadd)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblhoten, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txthoten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnwrite))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbltuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btndelete))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblngonngu, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbongoaingu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        ClearFrom();
    }//GEN-LAST:event_btnaddActionPerformed

    private void btnwriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnwriteActionPerformed
        try {
            if (txtmanv.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Mã Nhân viên chưa được nhập");
                txtmanv.requestFocus();
                return;
            } else if(txthoten.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Họ Tên không để trống");
                txthoten.requestFocus();
                return;
            } else if (txttuoi.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tuổi không để trống");
                txttuoi.requestFocus();
                return;
            } else if (cbongoaingu.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(this, "Ngoại Ngữ chưa được chọn");
                return;
            }
            String po = txttuoi.getText();
            try {
                int Age = Integer.parseInt(po);
                if (Age < 16 || Age > 45) {
                    JOptionPane.showMessageDialog(this, "Tuổi > 16 hoặc < 45");
                    txttuoi.requestFocus();
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Tuổi phải là số");
                txttuoi.requestFocus();
                return;
            }

            addFrom();
            fillForm();
            SaveFile();
            index = ListEmp.size() - 1;
            tblEmployee.setRowSelectionInterval(index, index);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnwriteActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
    OpendFile();
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        int sl = tblEmployee.getSelectedRow();
        try {
            if (sl >= 0) {
                Delete();
                ClearFrom();
            }
            fillForm();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        index = tblEmployee.getSelectedRow();
        try {
            if (index >= 0) {
                showDetails();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblEmployeeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnwrite;
    private javax.swing.JComboBox<String> cbongoaingu;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblhoten;
    private javax.swing.JLabel lblmanv;
    private javax.swing.JLabel lblngonngu;
    private javax.swing.JLabel lbltuoi;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txthoten;
    private javax.swing.JTextField txtmanv;
    private javax.swing.JTextField txttuoi;
    // End of variables declaration//GEN-END:variables

    private void ClearFrom() {
        txtmanv.setText("");
        txthoten.setText("");
        txttuoi.setText("");
        cbongoaingu.setSelectedIndex(0);
        index = -1;
        
    }
    private Employee ReadFrom() {
        String MaNV = txtmanv.getText();
        String FullName = txthoten.getText();
        int Age = Integer.parseInt(txttuoi.getText());
        String NgoaiNgu = cbongoaingu.getSelectedItem() + "";
        Employee emp = new Employee(MaNV, FullName, Age, NgoaiNgu);
        return emp;
    }
    private void addFrom() {
        Employee emp = ReadFrom();
        ListEmp.add(emp);
    }

    private void fillForm() {
        model.setRowCount(0);
        for (Employee emp : ListEmp) {
            model.addRow(new Object[] {emp.getMaNV(), emp.getFullName(),emp.getAge(),
            emp.getNgoaiNgu(),emp.getAgeLaoDong(emp.getAge())});
        }
    }

    private void Delete() {
        index = tblEmployee.getSelectedRow();
        ListEmp.remove(index);
        index = -1;
    }

    private void showDetails() {
        Employee emp = ListEmp.get(index);
        txtmanv.setText(emp.getMaNV());
        txthoten.setText(emp.getFullName());
        txttuoi.setText(emp.getAge() + "");
        cbongoaingu.setSelectedItem(emp.getNgoaiNgu());
        tblEmployee.setRowSelectionInterval(index, index);
        
    }
    private void SaveFile() {
        FileOutputStream fos = null;
        ObjectOutputStream oos = null;
        JFileChooser Jfile = null;
        
        try {
            Jfile = new JFileChooser();
            int select = Jfile.showSaveDialog(this);
            String FileName = Jfile.getSelectedFile().getAbsolutePath();
            if (select == JFileChooser.APPROVE_OPTION) {
                fos = new FileOutputStream(FileName);
                oos = new ObjectOutputStream(fos);
                oos.writeObject(ListEmp);
            }
            
            oos.flush();
            fos.flush();
            JOptionPane.showMessageDialog(this, "Lưu file thành công");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lưu file thất bại");
            return;
            
        } finally {
            try {
                oos.close();
                fos.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
    }
    private void OpendFile() {
        FileInputStream fis = null;
        ObjectInputStream ois = null;
        JFileChooser Jfile = null;
        
        try {
            Jfile = new JFileChooser();
            int select = Jfile.showOpenDialog(this);
            String FileName = Jfile.getSelectedFile().getAbsolutePath();
            if (select == JFileChooser.APPROVE_OPTION) {
                fis = new FileInputStream(FileName);
                ois = new ObjectInputStream(fis);
                ListEmp = (List<Employee>) ois.readObject();
                
                if (ListEmp.size() >= 0 ){
                    fillForm();
                    index = 0;
                    showDetails();
                }
            }
            

            JOptionPane.showMessageDialog(this, "Ghi file thành công");
        } catch (Exception e) {
            return;
            
        } finally {
            try {
                ois.close();
                fis.close();
            } catch (Exception e) {
                return;
            }
        }
}
}
