
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Khai
 */
public class formTestt extends javax.swing.JFrame {

    /**
     * Creates new form formTestt
     */
    DefaultTableModel model;
    List<StudentTest> ListSV = new ArrayList<>();
    int index = 0;

    public formTestt() {
        initComponents();
        setLocationRelativeTo(null);

        model = (DefaultTableModel) tblListSV.getModel();
//        
ListSV.add(new StudentTest("Khải", 18, "PT1530C-UD"));
        ListSV.add(new StudentTest("Sáng", 18, "PT1530C-UD"));
        ListSV.add(new StudentTest("Việt Anh", 18, "PT1530C-UD"));
        ListSV.add(new StudentTest("Hồng Anh", 18, "PT1530C-UD"));
//
////        IndexFirst();
//        
        if (ListSV.size() >= 0) {
            FillForm();
            showDetails();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblFullname = new javax.swing.JLabel();
        txtFullname = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblAge1 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        cboClass = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnPrew = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListSV = new javax.swing.JTable();
        lblIndex = new javax.swing.JLabel();
        btnWrite = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        lblTitle.setText("QUẢN LÍ SINH VIÊN");

        lblFullname.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblFullname.setText("HỌ VÀ TÊN");

        txtFullname.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        lblAge.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblAge.setText("TUỔI");

        txtAge.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        lblAge1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblAge1.setText("LỚP");

        btnClear.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        cboClass.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cboClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn Lớp", "PT1530A-UD", "PT1530B-UD", "PT1530C-UD", "PT1530D-UD" }));

        btnAdd.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnFirst.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrew.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnPrew.setText("<<");
        btnPrew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrewActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        tblListSV.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tblListSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "HOTEN", "TUOI", "LOP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListSVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblListSV);

        lblIndex.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        btnWrite.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btnWrite.setText("Write");
        btnWrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWriteActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jButton2.setText("Read");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFullname)
                            .addComponent(lblAge1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtAge)
                                    .addComponent(cboClass, 0, 242, Short.MAX_VALUE)
                                    .addComponent(txtFullname))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(32, 32, 32))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnPrew))
                                    .addComponent(btnWrite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnNext)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnLast))
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblIndex)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnFirst, btnLast, btnNext, btnPrew, lblIndex});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFullname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFullname, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst)
                    .addComponent(btnPrew)
                    .addComponent(btnNext)
                    .addComponent(btnLast)
                    .addComponent(lblIndex))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnWrite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdd, btnClear, btnDelete, btnFirst, btnLast, btnNext, btnPrew, lblAge, lblFullname, lblIndex, txtAge, txtFullname});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cboClass, lblAge1});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblListSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListSVMouseClicked
        index = tblListSV.getSelectedRow();
        try {
            if (index >= 0) {
                showDetails();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tblListSVMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        try {
            if (txtFullname.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Chưa nhập Họ Và Tên");
                return;
            } else if (txtAge.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tuổi không để trống");
                return;
            } else if (cboClass.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(this, "Chưa chọn Lớp");
                return;
            }
            try {
                int checkAge = Integer.parseInt(txtAge.getText());
                if (checkAge < 18 || checkAge > 30) {
                    JOptionPane.showMessageDialog(this, "Tuổi >= 18 hặc <= 30");
                    txtAge.requestFocus();
                    return;

                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Tuổi phải là số");
                txtAge.requestFocus();
                return;
            }
        AddToForm();
        ClearForm();
        FillForm();
        index = ListSV.size() - 1;
//        showDetails();
        JOptionPane.showMessageDialog(this, "Thêm thành công !");
        } catch (Exception e) {
            e.printStackTrace();
        }
//          String Age = txtAge.getText();

       
//        IndexFirst();
        

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        ClearForm();
        FillForm();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        try {
            if (ListSV.size() == 0) {
                JOptionPane.showMessageDialog(this, "Không còn dữ liệu trên bảng");
                return;
            }
            int select = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa: " + 
                    txtFullname.getText());
            if (select != JOptionPane.YES_OPTION) {
                return;
            }
        } catch (Exception e) {
        }
        Delete();
//        IndexFirst();
        FillForm();
        ClearForm();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        index = 0;
        showDetails();
//        IndexFirst();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        index = ListSV.size() - 1;
        showDetails();
//        IndexFirst();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnPrewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrewActionPerformed
        index--;
        if (index < 0) {
            index = ListSV.size() - 1;
        }
        showDetails();
//        IndexFirst();
    }//GEN-LAST:event_btnPrewActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        index++;
        if (index > ListSV.size() - 1) {
            index = 0;
        }
        showDetails();
//        IndexFirst();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnWriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWriteActionPerformed
        try {
//            B1: Tạo đối tượng đọc/ghi
            FileOutputStream fos = new FileOutputStream("E:/Java2/Buffer.doc");
            ObjectOutputStream os = new ObjectOutputStream(fos);
            
            //B2: Thực hiện đọc ghi
            os.writeObject(ListSV);

            os.flush();
            fos.flush();
            os.close();
            fos.close();
//            helper.writeObject("E:/Java2/dskh.txt", ListSV);
            JOptionPane.showMessageDialog(this, "Ghi thành công");
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi ghi file");
        }
    }//GEN-LAST:event_btnWriteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            FileInputStream fis = new FileInputStream("E:/Java2/Buffer.doc");
            ObjectInputStream ois = new ObjectInputStream(fis);
            ListSV = (ArrayList<StudentTest>) ois.readObject();
            ois.close();
            fis.close();
            
            if (ListSV.size() > 0) {
                FillForm();
                index = 0;
                showDetails();
            }

//        helper.writeObject("E:/Java2/dskh.txt", ListSV);
//        ListSV = (ArrayList<StudentTest>)helper.readObject("E:/Java2/dskh.txt");
        
        JOptionPane.showMessageDialog(this, "Ghi thanh cong");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ghi that bai");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formTestt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formTestt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formTestt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formTestt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formTestt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrew;
    private javax.swing.JButton btnWrite;
    private javax.swing.JComboBox<String> cboClass;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAge1;
    private javax.swing.JLabel lblFullname;
    private javax.swing.JLabel lblIndex;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblListSV;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtFullname;
    // End of variables declaration//GEN-END:variables
    private void IndexFirst() {

//        lblIndex.setText((index + 1) + "/" + ListSV.size());
//        if (ListSV.size() == 0) {
//            index = 0;
        lblIndex.setText((index) + "/" + ListSV.size());
//        } else {
//            lblIndex.setText((index) + "/" + ListSV.size());
//        }
    }

    private void FillForm() {
        model.setRowCount(0);
        for (StudentTest studentTest : ListSV) {
            model.addRow(new Object[]{studentTest.getFullName(), studentTest.getAge(), studentTest.getLop()});
        }
    }

    private StudentTest ReadForm() {
        String FullName = txtFullname.getText();
        int Age = Integer.parseInt(txtAge.getText());
        String Lop = cboClass.getSelectedItem() + "";
        StudentTest sv = new StudentTest(FullName, Age, Lop);
        return sv;
    }

    private void AddToForm() {
        StudentTest sv = ReadForm();
        ListSV.add(sv);
//        IndexFirst();
        ClearForm();

    }

    private void showDetails() {
//        int select = tblListSV.getSelectedRow();
//        select = index;
        StudentTest sv = ListSV.get(index);
        txtFullname.setText(sv.getFullName());
        txtAge.setText(sv.getAge() + "");
        cboClass.setSelectedItem(sv.getLop());
        lblIndex.setText((index + 1) + "/" + ListSV.size());
        tblListSV.setRowSelectionInterval(index, index);

    }

    private void ClearForm() {
        txtFullname.setText("");
        txtAge.setText("");
        cboClass.setSelectedIndex(0);
        lblIndex.setText("....");
        index = -1;

    }

    private void Delete() {
        index = tblListSV.getSelectedRow();
        ListSV.remove(index);
        index = 0;
    }
}
