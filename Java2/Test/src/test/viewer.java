/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Khai2
 */
public class viewer extends javax.swing.JFrame {

    /**
     * Creates new form viewer
     */
    DefaultTableModel model;
    List<Student> ListSV = new ArrayList<>();
    int index = 0;
    public viewer() {
        initComponents();
        setLocationRelativeTo(null);
        chuChay();
        model = (DefaultTableModel) tblListSV.getModel();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaSv = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtFullName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cboGender = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtMarksAvg = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListSV = new javax.swing.JTable();
        btnClear = new javax.swing.JButton();
        btnAddtoFile = new javax.swing.JButton();
        btnOpenFile = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(51, 51, 255));
        lblTitle.setText("Quản Lí Nhân Viên");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel2.setText("Mã Sinh Viên");

        txtMaSv.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        txtMaSv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSvActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel3.setText("Họ Tên");

        txtFullName.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        txtFullName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFullNameActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel4.setText("Giới Tính");

        cboGender.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn giới tính", "Nam", "Nữ" }));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jLabel5.setText("Điểm");

        txtMarksAvg.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        txtMarksAvg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMarksAvgActionPerformed(evt);
            }
        });

        tblListSV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MASV", "HOTEN", "GIOITINH", "DIEM", "KETQUA"
            }
        ));
        tblListSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListSVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblListSV);

        btnClear.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btnClear.setText("Thêm");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnAddtoFile.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btnAddtoFile.setText("Ghi File");
        btnAddtoFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddtoFileActionPerformed(evt);
            }
        });

        btnOpenFile.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btnOpenFile.setText("Open File");
        btnOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenFileActionPerformed(evt);
            }
        });

        btnRemove.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        btnRemove.setText("Delete");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaSv, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAddtoFile, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnClear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMarksAvg, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(108, 134, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnOpenFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAddtoFile, btnClear, btnOpenFile});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMaSv, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addComponent(btnClear)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddtoFile)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboGender, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addComponent(btnOpenFile)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMarksAvg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(btnRemove)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel5, txtMarksAvg});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnClear, txtMaSv});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAddtoFile, txtFullName});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaSvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaSvActionPerformed

    private void txtFullNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFullNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFullNameActionPerformed

    private void txtMarksAvgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMarksAvgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMarksAvgActionPerformed

    private void tblListSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListSVMouseClicked
        index = tblListSV.getSelectedRow();
        if (index >= 0) {
            ShowDetails();
        }
    }//GEN-LAST:event_tblListSVMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
       clear();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAddtoFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddtoFileActionPerformed
        try {
            if (txtMaSv.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Mã Sinh Viên chưa được nhập");
                txtMaSv.requestFocus();
                return;
            } else if (txtFullName.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tên Sinh Viên chưa được nhập");
                txtFullName.requestFocus();
                return;
                
            } else if (cboGender.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(this, "Giới tính Sinh Viên chưa được chọn");
                cboGender.requestFocus();
                return;
                
            } else if (txtMarksAvg.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Điểm chưa được nhập Sinh Viên chưa được chọn");
                txtMarksAvg.requestFocus();
                return;
            }
            
            if (index == - 1) {
                addTable();
                SaveFile();
                JOptionPane.showMessageDialog(this, "Lưu thành Công");
                FillTable();
                clear();
                index = ListSV.size() - 1;
                tblListSV.setRowSelectionInterval(index, index);
                
            } 
        } catch (Exception e) {
            e.printStackTrace();
            return;
        }
    }//GEN-LAST:event_btnAddtoFileActionPerformed

    private void btnOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenFileActionPerformed
        OpenFile();
    }//GEN-LAST:event_btnOpenFileActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        index = tblListSV.getSelectedRow();
        delete();
        FillTable();
    }//GEN-LAST:event_btnRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddtoFile;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnOpenFile;
    private javax.swing.JButton btnRemove;
    private javax.swing.JComboBox<String> cboGender;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblListSV;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtMaSv;
    private javax.swing.JTextField txtMarksAvg;
    // End of variables declaration//GEN-END:variables
    private void FillTable() {
        model.setRowCount(0);
        for (Student sv : ListSV) {
            model.addRow(new Object[] {sv.getMaSV(), sv.getFullName(), sv.getGrender(),
                sv.getMarksAvg(), sv.getRank(sv.getMarksAvg())});
        }
        
    }
    private Student ReadForm() {
        String MaSV = txtMaSv.getText();
        String FullName = txtFullName.getText();
        String Gender = cboGender.getSelectedItem() + "";
        double MarksAvg = Double.parseDouble(txtMarksAvg.getText());
        Student sv = new Student(MaSV, FullName, Gender, MarksAvg);
        
        return sv;
        
    }
    private void addTable() {
        Student sv = ReadForm();
        ListSV.add(sv);
   }
    private void SaveFile() {
        FileOutputStream fos = null;
        ObjectOutputStream oos = null;
        JFileChooser fc = null;
        try {
            fc = new JFileChooser();
            int select =  fc.showSaveDialog(this);
            String FileName = fc.getSelectedFile().getAbsolutePath();
            if (select == JFileChooser.APPROVE_OPTION) {
                fos = new FileOutputStream(FileName);
                oos = new ObjectOutputStream(fos);
                
                oos.writeObject(ListSV);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ghi File thất bại ");
            return;
        } finally {
            try {
                oos.flush();
                fos.close();
                oos.close();
            } catch (Exception e) {
                e.printStackTrace();
                return;
            }
        }
    }
    private void OpenFile() {
        FileInputStream fis = null;
        ObjectInputStream ois = null;
        JFileChooser fc = new JFileChooser();
        try {
            fc= new JFileChooser();
            int select = fc.showOpenDialog(this);
            String FileName = fc.getSelectedFile().getAbsolutePath();
            
            if (select == JFileChooser.APPROVE_OPTION) {
                fis = new FileInputStream(FileName);
                ois = new ObjectInputStream(fis);
                
                ListSV = (List<Student>) ois.readObject();
                
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi mở file");
            return;
        } finally {
            try {
                ois.close();
                fis.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    private void delete() {
        index = tblListSV.getSelectedRow();
        ListSV.remove(index);
    }
    private void ShowDetails() {
        Student sv = ListSV.get(index);
        txtMaSv.setText(sv.getMaSV());
        txtFullName.setText(sv.getFullName());
        cboGender.setSelectedItem(sv.getGrender());
        txtMarksAvg.setText(sv.getMarksAvg()+ "");
        
        
    }
    private void clear() {
        txtMaSv.setText("");
        txtFullName.setText("");
        cboGender.setSelectedIndex(0);
        txtMarksAvg.setText("");
        
        index = -1;
   }

    private void chuChay() {
        Thread thread = new Thread() {
            @Override
            public void run() {
                while(true) {
                    try {
                        String text = lblTitle.getText();
                        char endText = text.charAt(text.length() - 1);
                        lblTitle.setText(endText + text.substring(0, text.length() - 1));
                        Thread.sleep(3000);
                    } catch (Exception e) {
                        return;
                    }
                }
            }
        };
        thread.start();
    }
}
