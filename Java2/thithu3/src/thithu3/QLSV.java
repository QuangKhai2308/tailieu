/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package thithu3;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Khai2
 */
public class QLSV extends javax.swing.JFrame {

    /**
     * Creates new form QLSV
     */
    int index = 0;
    DefaultTableModel model;
    List<SinhVien> listSV = new ArrayList<>();
    public QLSV() {
        initComponents();
        setLocationRelativeTo(null);
        
        model = (DefaultTableModel) tblListSv.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFullName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMajors = new javax.swing.JTextField();
        txtMarks = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnOpenFile = new javax.swing.JButton();
        btnGhiFile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListSv = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản Lí Sinh Viên");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Họ Và Tên");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Ngành Học");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Điểm");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Ngày Sinh");

        btnDelete.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnOpenFile.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnOpenFile.setText("Mở File");
        btnOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenFileActionPerformed(evt);
            }
        });

        btnGhiFile.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnGhiFile.setText("Ghi");
        btnGhiFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGhiFileActionPerformed(evt);
            }
        });

        tblListSv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "HOTEN", "NGANHOC", "DIEM", "NGAYSINH"
            }
        ));
        tblListSv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListSvMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblListSv);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMajors, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                            .addComponent(txtFullName)
                            .addComponent(txtMarks, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnGhiFile, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnOpenFile, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnGhiFile, btnOpenFile});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpenFile, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMajors, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnGhiFile, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMarks, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, txtFullName, txtMajors});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGhiFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGhiFileActionPerformed
        try {
            if (txtFullName.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Bạn chưa nhập Họ Tên");
                txtFullName.requestFocus();
                return;
               
            } else if (txtMajors.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Bạn chưa nhập Ngành Học");
                txtMajors.requestFocus();
                return;
            } else if (txtMarks.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Bạn chưa nhập Điểm");
                txtMarks.requestFocus();
                return;
            } else if (txtDate.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Bạn chưa nhập Ngày Sinh");
                txtDate.requestFocus();
                return;
            }
            String Mark = txtMarks.getText();
            try {
                double checkMarks = Double.parseDouble(Mark);
                if (checkMarks < 0 || checkMarks > 10) {
                    JOptionPane.showMessageDialog(this, "Điểm phải là 0->10");
                    txtMarks.requestFocus();
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Điểm phải là số");
                txtMarks.requestFocus();
                return;
            }
            try {
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                Date date;
                String checkDate = txtDate.getText();
                date = sdf.parse(checkDate);
                
                
            
            } catch (Exception e) {
               JOptionPane.showMessageDialog(this, "Ngày sinh sai định dạng dd/MM/yyyy");
                txtDate.requestFocus();
                return;
            }
            addForm();
            saveFile();
            fillForm();
            index = listSV.size() - 1;
            tblListSv.setRowSelectionInterval(index, index);
            reset();
        } catch (Exception e) {
                e.printStackTrace();
        }
        
    }//GEN-LAST:event_btnGhiFileActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            if (listSV.size() > 0) {
                int select = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa: " + 
                    txtFullName.getText());
                if (select == JOptionPane.YES_OPTION) {
                    delete();
                    reset();
                    fillForm();
                }
                
            } else {
                JOptionPane.showMessageDialog(this, "Bảng chưa có dư liệu");
            return;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
//        delete();
//        reset();
//        fillForm();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblListSvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListSvMouseClicked
        index = tblListSv.getSelectedRow();
        try {
            if (index >= 0) {
                showDetails();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblListSvMouseClicked

    private void btnOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenFileActionPerformed
       openFile();
//       fillForm();
//       showDetails();
    }//GEN-LAST:event_btnOpenFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLSV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLSV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnGhiFile;
    private javax.swing.JButton btnOpenFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblListSv;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtMajors;
    private javax.swing.JTextField txtMarks;
    // End of variables declaration//GEN-END:variables
    private void fillForm() {
        model.setRowCount(0);
        for (SinhVien sv : listSV) {
            model.addRow(new Object[] {sv.getFullName(), sv.getMajors(),
            sv.getMarks(), sv.getDate()});
        }
    }
    private SinhVien writeForm() {
        String FullName = txtFullName.getText();
        String Majors = txtMajors.getText();
        double Marks = Double.parseDouble(txtMarks.getText());
        String Date = txtDate.getText();
        
        SinhVien sv = new SinhVien(FullName, Majors, Marks, Date);
        return sv;
    }
    private void addForm() {
        SinhVien sv = writeForm();
        listSV.add(sv);
    }
    private void showDetails() {
        
        SinhVien sv = listSV.get(index);
        txtFullName.setText(sv.getFullName());
        txtMajors.setText(sv.getMajors());
        txtMarks.setText(sv.getMarks() + "");
        txtDate.setText(sv.getDate());
        tblListSv.setRowSelectionInterval(index, index);
    }
    private void reset() {
        txtFullName.setText("");
        txtMajors.setText("");
         txtMarks.setText("");
          txtDate.setText("");
    }
    private void delete() {
        index = tblListSv.getSelectedRow();
        listSV.remove(index);
   }
    private void openFile() {
        FileInputStream fis = null;
        ObjectInputStream ois = null;
        JFileChooser jfc = null;
        try {
            jfc = new JFileChooser();
            int select = jfc.showOpenDialog(this);
         
            if (select == JFileChooser.APPROVE_OPTION) {
                String fileName = jfc.getSelectedFile().getAbsolutePath();
                fis = new FileInputStream(fileName);
                ois = new ObjectInputStream(fis);
                listSV = (List<SinhVien>) ois.readObject();
                
                
                fillForm();
                index  = 0;
                showDetails();
              
            }
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi mở file");
            return;
        }finally {
            try {
                ois.close();
                fis.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    private void saveFile() {
        FileOutputStream fos = null;
        ObjectOutputStream oos = null;
        JFileChooser jfc = null;
        try {
            jfc = new JFileChooser();
            int select = jfc.showSaveDialog(this);
    
            if (select == JFileChooser.APPROVE_OPTION) {
                String fileName = jfc.getSelectedFile().getAbsolutePath();
                fos = new FileOutputStream(fileName);
                oos = new ObjectOutputStream(fos);
                oos.writeObject(listSV);
            }
            JOptionPane.showMessageDialog(this, "Lưu file thành công");
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi lưu file");
            return;
        }finally {
            try {
                oos.flush();
                oos.close();
                fos.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
}
